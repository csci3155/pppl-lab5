## type Decl(MConst,while,Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),Decl(MConst,hd,Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),Decl(MConst,tl,Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),Decl(MConst,Nil,Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Null),Decl(MConst,Cons,Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),Decl(MConst,Listy,Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Var(while),List(Binary(Ne,Var(c),Var(Nil)))),List(Binary(Seq,Print(Call(Var(hd),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Var(tl),List(Var(c)))),Undefined)))),Undefined)))),Decl(MConst,l0,Call(Var(Cons),List(N(1.0), Call(Var(Cons),List(N(2.0), Call(Var(Cons),List(N(3.0), Var(Nil))))))),Binary(Seq,Call(GetField(Var(Listy),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Var(while),List(Binary(Ne,Var(c),Var(Nil)))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Var(hd),List(Var(c))),Call(Var(hd),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Var(tl),List(Var(c)))),Undefined)))),Call(GetField(Var(Listy),printy),List(Var(l0))))))))))))) : Undefined
## step    0:
##  Map()
##  Decl(MConst,while,Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),Decl(MConst,hd,Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),Decl(MConst,tl,Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),Decl(MConst,Nil,Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Null),Decl(MConst,Cons,Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),Decl(MConst,Listy,Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Var(while),List(Binary(Ne,Var(c),Var(Nil)))),List(Binary(Seq,Print(Call(Var(hd),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Var(tl),List(Var(c)))),Undefined)))),Undefined)))),Decl(MConst,l0,Call(Var(Cons),List(N(1.0), Call(Var(Cons),List(N(2.0), Call(Var(Cons),List(N(3.0), Var(Nil))))))),Binary(Seq,Call(GetField(Var(Listy),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Var(while),List(Binary(Ne,Var(c),Var(Nil)))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Var(hd),List(Var(c))),Call(Var(hd),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Var(tl),List(Var(c)))),Undefined)))),Call(GetField(Var(Listy),printy),List(Var(l0)))))))))))))
## step    1:
##  Map()
##  Decl(MConst,hd,Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),Decl(MConst,tl,Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),Decl(MConst,Nil,Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Null),Decl(MConst,Cons,Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),Decl(MConst,Listy,Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Var(Nil)))),List(Binary(Seq,Print(Call(Var(hd),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Var(tl),List(Var(c)))),Undefined)))),Undefined)))),Decl(MConst,l0,Call(Var(Cons),List(N(1.0), Call(Var(Cons),List(N(2.0), Call(Var(Cons),List(N(3.0), Var(Nil))))))),Binary(Seq,Call(GetField(Var(Listy),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Var(Nil)))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Var(hd),List(Var(c))),Call(Var(hd),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Var(tl),List(Var(c)))),Undefined)))),Call(GetField(Var(Listy),printy),List(Var(l0))))))))))))
## step    2:
##  Map()
##  Decl(MConst,tl,Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),Decl(MConst,Nil,Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Null),Decl(MConst,Cons,Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),Decl(MConst,Listy,Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Var(Nil)))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Var(tl),List(Var(c)))),Undefined)))),Undefined)))),Decl(MConst,l0,Call(Var(Cons),List(N(1.0), Call(Var(Cons),List(N(2.0), Call(Var(Cons),List(N(3.0), Var(Nil))))))),Binary(Seq,Call(GetField(Var(Listy),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Var(Nil)))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Var(tl),List(Var(c)))),Undefined)))),Call(GetField(Var(Listy),printy),List(Var(l0)))))))))))
## step    3:
##  Map()
##  Decl(MConst,Nil,Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Null),Decl(MConst,Cons,Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),Decl(MConst,Listy,Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Var(Nil)))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))),Decl(MConst,l0,Call(Var(Cons),List(N(1.0), Call(Var(Cons),List(N(2.0), Call(Var(Cons),List(N(3.0), Var(Nil))))))),Binary(Seq,Call(GetField(Var(Listy),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Var(Nil)))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(Var(Listy),printy),List(Var(l0))))))))))
## step    4:
##  Map()
##  Decl(MConst,Nil,Null,Decl(MConst,Cons,Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),Decl(MConst,Listy,Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Var(Nil)))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))),Decl(MConst,l0,Call(Var(Cons),List(N(1.0), Call(Var(Cons),List(N(2.0), Call(Var(Cons),List(N(3.0), Var(Nil))))))),Binary(Seq,Call(GetField(Var(Listy),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Var(Nil)))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(Var(Listy),printy),List(Var(l0))))))))))
## step    5:
##  Map()
##  Decl(MConst,Cons,Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),Decl(MConst,Listy,Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))),Decl(MConst,l0,Call(Var(Cons),List(N(1.0), Call(Var(Cons),List(N(2.0), Call(Var(Cons),List(N(3.0), Null)))))),Binary(Seq,Call(GetField(Var(Listy),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(Var(Listy),printy),List(Var(l0)))))))))
## step    6:
##  Map()
##  Decl(MConst,Listy,Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))),Decl(MConst,l0,Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(1.0), Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(2.0), Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(3.0), Null)))))),Binary(Seq,Call(GetField(Var(Listy),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(Var(Listy),printy),List(Var(l0))))))))
## step    7:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))))
##  Decl(MConst,Listy,A(1),Decl(MConst,l0,Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(1.0), Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(2.0), Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(3.0), Null)))))),Binary(Seq,Call(GetField(Var(Listy),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(Var(Listy),printy),List(Var(l0))))))))
## step    8:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))))
##  Decl(MConst,l0,Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(1.0), Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(2.0), Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(3.0), Null)))))),Binary(Seq,Call(GetField(A(1),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(Var(l0)))))))
## step    9:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))))
##  Decl(MConst,l0,Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(1.0), Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(2.0), Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> N(3.0), t -> Null))))))),Binary(Seq,Call(GetField(A(1),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(Var(l0)))))))
## step   10:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)))
##  Decl(MConst,l0,Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(1.0), Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(2.0), Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),A(2)))))),Binary(Seq,Call(GetField(A(1),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(Var(l0)))))))
## step   11:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)))
##  Decl(MConst,l0,Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(1.0), Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(2.0), A(2))))),Binary(Seq,Call(GetField(A(1),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(Var(l0)))))))
## step   12:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)))
##  Decl(MConst,l0,Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(1.0), Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> N(2.0), t -> A(2)))))),Binary(Seq,Call(GetField(A(1),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(Var(l0)))))))
## step   13:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))))
##  Decl(MConst,l0,Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(1.0), Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),A(3)))),Binary(Seq,Call(GetField(A(1),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(Var(l0)))))))
## step   14:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))))
##  Decl(MConst,l0,Call(Function(None,List((h,MTyp(MConst,TNumber)), (t,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> Var(h), t -> Var(t))))),List(N(1.0), A(3))),Binary(Seq,Call(GetField(A(1),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(Var(l0)))))))
## step   15:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))))
##  Decl(MConst,l0,Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),Obj(TreeMap(h -> N(1.0), t -> A(3)))),Binary(Seq,Call(GetField(A(1),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(Var(l0)))))))
## step   16:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))))
##  Decl(MConst,l0,Unary(Cast(TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))),A(4)),Binary(Seq,Call(GetField(A(1),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(Var(l0)))))))
## step   17:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))))
##  Decl(MConst,l0,A(4),Binary(Seq,Call(GetField(A(1),printy),List(Var(l0))),Decl(MVar,c,Var(l0),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(Var(l0)))))))
## step   18:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))))
##  Binary(Seq,Call(GetField(A(1),printy),List(A(4))),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   19:
##  Map(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))))
##  Binary(Seq,Call(Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)),List(A(4))),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   20:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   21:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Ne,Unary(Deref,A(5)),Null)),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Var(body)))))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   22:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,If(Unary(Not,Binary(Ne,Unary(Deref,A(5)),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   23:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,If(Unary(Not,Binary(Ne,A(4),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   24:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   25:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   26:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   27:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(A(4)))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   28:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(4)),h)),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   29:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(GetField(A(4),h)),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   30:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(N(1.0)),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
1.0
## step   31:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   32:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   33:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(A(4)))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   34:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(4)),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   35:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),GetField(A(4),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   36:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(4))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),A(3)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   37:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,A(3),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   38:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   39:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   40:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Ne,Unary(Deref,A(5)),Null)),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Var(body)))))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   41:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,If(Unary(Not,Binary(Ne,Unary(Deref,A(5)),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   42:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,If(Unary(Not,Binary(Ne,A(3),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   43:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   44:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   45:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   46:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(A(3)))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   47:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(3)),h)),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   48:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(GetField(A(3),h)),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   49:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(N(2.0)),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
2.0
## step   50:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   51:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   52:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(A(3)))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   53:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(3)),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   54:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),GetField(A(3),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   55:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(3))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),A(2)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   56:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,A(2),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   57:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   58:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   59:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Ne,Unary(Deref,A(5)),Null)),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Var(body)))))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   60:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,If(Unary(Not,Binary(Ne,Unary(Deref,A(5)),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   61:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,If(Unary(Not,Binary(Ne,A(2),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   62:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   63:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   64:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   65:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(A(2)))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   66:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(2)),h)),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   67:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(GetField(A(2),h)),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   68:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Print(N(3.0)),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
3.0
## step   69:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   70:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   71:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(A(2)))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   72:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(2)),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   73:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),GetField(A(2),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   74:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> A(2))
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(5)),Null),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   75:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Binary(Seq,Null,Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   76:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   77:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   78:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Ne,Unary(Deref,A(5)),Null)),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Var(body)))))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   79:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,If(Unary(Not,Binary(Ne,Unary(Deref,A(5)),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   80:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,If(Unary(Not,Binary(Ne,Null,Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   81:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,If(Unary(Not,B(false)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   82:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,If(B(true),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(5)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(5))))),Binary(Seq,Assign(Unary(Deref,A(5)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(5))))),Undefined)))))),Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   83:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Undefined,Undefined),Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   84:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Undefined,Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))))
## step   85:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Decl(MVar,c,A(4),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Var(c)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c))))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Call(GetField(A(1),printy),List(A(4)))))
## step   86:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))
## step   87:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Ne,Unary(Deref,A(6)),Null)),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Var(body)))))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))
## step   88:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,Unary(Deref,A(6)),Null)),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step   89:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,A(4),Null)),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step   90:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step   91:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step   92:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step   93:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),A(4)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step   94:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(4),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step   95:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(4),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(A(4))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step   96:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(4),h),Binary(Times,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(4)),h),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step   97:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(4),h),Binary(Times,GetField(A(4),h),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step   98:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(4),h),Binary(Times,N(1.0),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step   99:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(4),h),Binary(Times,N(1.0),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(A(4))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  100:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(4),h),Binary(Times,N(1.0),GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(4)),h))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  101:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(4),h),Binary(Times,N(1.0),GetField(A(4),h))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  102:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(4),h),Binary(Times,N(1.0),N(1.0))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  103:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(4),h),N(1.0)),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  104:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,N(1.0),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  105:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  106:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(A(4)))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  107:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(4)),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  108:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),GetField(A(4),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  109:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(4), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),A(3)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  110:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,A(3),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  111:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  112:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))
## step  113:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Ne,Unary(Deref,A(6)),Null)),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Var(body)))))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))
## step  114:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,Unary(Deref,A(6)),Null)),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step  115:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,A(3),Null)),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step  116:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step  117:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step  118:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  119:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),A(3)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  120:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(3),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  121:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(3),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(A(3))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  122:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(3),h),Binary(Times,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(3)),h),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  123:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(3),h),Binary(Times,GetField(A(3),h),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  124:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(3),h),Binary(Times,N(2.0),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  125:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(3),h),Binary(Times,N(2.0),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(A(3))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  126:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(3),h),Binary(Times,N(2.0),GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(3)),h))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  127:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(3),h),Binary(Times,N(2.0),GetField(A(3),h))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  128:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(3),h),Binary(Times,N(2.0),N(2.0))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  129:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(2.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(3),h),N(4.0)),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  130:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,N(4.0),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  131:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  132:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(A(3)))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  133:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(3)),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  134:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),GetField(A(3),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  135:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(3), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),A(2)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  136:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,A(2),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  137:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  138:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))
## step  139:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Ne,Unary(Deref,A(6)),Null)),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Var(body)))))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))
## step  140:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,Unary(Deref,A(6)),Null)),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step  141:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,A(2),Null)),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step  142:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step  143:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step  144:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  145:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),A(2)),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  146:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(2),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  147:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(2),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(A(2))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  148:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(2),h),Binary(Times,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(2)),h),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  149:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(2),h),Binary(Times,GetField(A(2),h),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  150:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(2),h),Binary(Times,N(3.0),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  151:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(2),h),Binary(Times,N(3.0),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(A(2))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  152:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(2),h),Binary(Times,N(3.0),GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(2)),h))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  153:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(2),h),Binary(Times,N(3.0),GetField(A(2),h))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  154:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(2),h),Binary(Times,N(3.0),N(3.0))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  155:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(3.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(GetField(A(2),h),N(9.0)),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  156:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,N(9.0),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  157:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  158:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(A(2)))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  159:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(2)),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  160:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),GetField(A(2),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  161:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> A(2), A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(6)),Null),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  162:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Null,Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  163:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined))))),Call(GetField(A(1),printy),List(A(4))))
## step  164:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))
## step  165:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Ne,Unary(Deref,A(6)),Null)),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Var(body)))))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))),Call(GetField(A(1),printy),List(A(4))))
## step  166:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,Unary(Deref,A(6)),Null)),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step  167:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,Null,Null)),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step  168:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,B(false)),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step  169:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(B(true),Undefined,Binary(Seq,Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(6)),Null))),List(Binary(Seq,Assign(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber))),Unary(Deref,A(6))),h),Binary(Times,Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(6)))))),Binary(Seq,Assign(Unary(Deref,A(6)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(6))))),Undefined)))))),Call(GetField(A(1),printy),List(A(4))))
## step  170:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Undefined,Call(GetField(A(1),printy),List(A(4))))
## step  171:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Call(GetField(A(1),printy),List(A(4)))
## step  172:
##  HashMap(A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Call(Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)),List(A(4)))
## step  173:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))),Undefined)
## step  174:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Ne,Unary(Deref,A(7)),Null)),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Var(body)))))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))),Undefined)
## step  175:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,Unary(Deref,A(7)),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  176:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,A(4),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  177:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  178:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  179:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  180:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(A(4)))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  181:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(4)),h)),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  182:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(GetField(A(4),h)),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  183:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(1.0)),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
1.0
## step  184:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  185:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  186:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(A(4)))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  187:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(4)),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  188:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),GetField(A(4),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  189:
##  HashMap(A(7) -> A(4), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),A(3)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  190:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,A(3),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  191:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  192:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))),Undefined)
## step  193:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Ne,Unary(Deref,A(7)),Null)),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Var(body)))))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))),Undefined)
## step  194:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,Unary(Deref,A(7)),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  195:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,A(3),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  196:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  197:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  198:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  199:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(A(3)))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  200:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(3)),h)),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  201:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(GetField(A(3),h)),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  202:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(4.0)),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
4.0
## step  203:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  204:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  205:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(A(3)))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  206:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(3)),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  207:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),GetField(A(3),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  208:
##  HashMap(A(7) -> A(3), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),A(2)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  209:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,A(2),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  210:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  211:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))),Undefined)
## step  212:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Ne,Unary(Deref,A(7)),Null)),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Var(body)))))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))),Undefined)
## step  213:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,Unary(Deref,A(7)),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  214:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,A(2),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  215:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,B(true)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  216:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(B(false),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  217:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  218:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(A(2)))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  219:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(2)),h)),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  220:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(GetField(A(2),h)),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  221:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Print(N(9.0)),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
9.0
## step  222:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Undefined,Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  223:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  224:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(A(2)))),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  225:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),A(2)),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  226:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),GetField(A(2),t)),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  227:
##  HashMap(A(7) -> A(2), A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Assign(Unary(Deref,A(7)),Null),Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  228:
##  HashMap(A(7) -> Null, A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Binary(Seq,Null,Undefined),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  229:
##  HashMap(A(7) -> Null, A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Binary(Seq,Undefined,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined))))),Undefined)
## step  230:
##  HashMap(A(7) -> Null, A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))),Undefined)
## step  231:
##  HashMap(A(7) -> Null, A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Call(Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Binary(Ne,Unary(Deref,A(7)),Null)),Undefined,Binary(Seq,Var(body),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Var(body)))))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))),Undefined)
## step  232:
##  HashMap(A(7) -> Null, A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,Unary(Deref,A(7)),Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  233:
##  HashMap(A(7) -> Null, A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,Binary(Ne,Null,Null)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  234:
##  HashMap(A(7) -> Null, A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(Unary(Not,B(false)),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  235:
##  HashMap(A(7) -> Null, A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,If(B(true),Undefined,Binary(Seq,Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)),Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Unary(Deref,A(7)),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Unary(Deref,A(7))))),Binary(Seq,Assign(Unary(Deref,A(7)),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Unary(Deref,A(7))))),Undefined)))))),Undefined)
## step  236:
##  HashMap(A(7) -> Null, A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Binary(Seq,Undefined,Undefined)
## result:
##  HashMap(A(7) -> Null, A(1) -> Obj(TreeMap(printy -> Function(None,List((c,MTyp(MVar,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Some(TUndefined),Binary(Seq,Call(Call(Function(Some(while),List((b,MTyp(MName,TBool))),Some(TFunction(List((body,MTyp(MName,TUndefined))),TUndefined)),Function(None,List((body,MTyp(MName,TUndefined))),None,If(Unary(Not,Var(b)),Undefined,Binary(Seq,Var(body),Call(Call(Var(while),List(Var(b))),List(Var(body))))))),List(Binary(Ne,Var(c),Null))),List(Binary(Seq,Print(Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),h)),List(Var(c)))),Binary(Seq,Assign(Var(c),Call(Function(None,List((l,MTyp(MConst,TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),None,GetField(Unary(Cast(TObj(TreeMap(h -> TNumber, t -> TInterface(Listy,TObj(TreeMap(h -> TNumber, t -> TVar(Listy))))))),Var(l)),t)),List(Var(c)))),Undefined)))),Undefined)))), A(4) -> Obj(TreeMap(h -> N(1.0), t -> A(3))), A(2) -> Obj(TreeMap(h -> N(9.0), t -> Null)), A(6) -> Null, A(3) -> Obj(TreeMap(h -> N(4.0), t -> A(2))), A(5) -> Null)
##  Undefined
undefined
